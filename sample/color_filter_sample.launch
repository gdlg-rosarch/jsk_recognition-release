<!-- -*- mode: xml -*- -->
<launch>
  <!-- kinect node -->
  <!-- <include file="$(find openni_camera)/launch/openni_node.launch" /> -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager"
        args="manager" output="screen"/>

  <!-- kinect node (Nodelet) -->
  <include file="$(find openni_camera)/launch/kinect_frames.launch"/>
  <node pkg="nodelet" type="nodelet" name="kinect_camera"
        args="load openni_camera/OpenNINodelet pcl_manager" output="screen">
    <param name="device_id" value="#1"/> <!-- this line uses first enumerated device -->
    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
    <param name="rgb_frame_id" value="/openni_rgb_optical_frame" />
    <param name="depth_frame_id" value="/openni_depth_optical_frame" />
    <param name="use_indices" value="false" />
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="2" />
    <param name="depth_mode" value="2" />
    <param name="debayering" value="2" />
    <param name="depth_time_offset" value="0" />
    <param name="image_time_offset" value="0" />
  </node>

  <node pkg="nodelet" type="nodelet" name="passthrough" args="load
    pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/camera/rgb/points" />
    <remap from="~output" to="/hsv_input" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.0
      filter_limit_max: 2.0
      filter_limit_negative: False
    </rosparam>
  </node>

  <include file="$(find jsk_pcl_ros)/launch/hsv_color_filter.launch" >
    <arg name="create_manager" value="false" />
    <arg name="manager" value="/pcl_manager" />
    <arg name="OUTPUT" value="/filtered_red" />
    <arg name="DEFAULT_NAMESPACE" value="/HSV_filter_red" />
    <arg name="h_max" value="1.0" />
  </include>

  <include file="$(find jsk_pcl_ros)/launch/hsv_color_filter.launch" >
    <arg name="create_manager" value="false" />
    <arg name="manager" value="/pcl_manager" />
    <arg name="OUTPUT" value="/filtered_blue" />
    <arg name="DEFAULT_NAMESPACE" value="/HSV_filter_blue" />
  </include>
 <!-- input == passthrough === hsv_converter == hsv_filter ==                -->
 <!--                       |                                |               -->
 <!--                       ============================= extract2 == output -->

</launch>
